{"version":3,"sources":["editor/run-test.tsx","ui.tsx","editor/persist.ts","editor/casbin-mode/example.ts","editor/select-model.tsx","editor/casbin-mode/casbin-conf.ts","editor/casbin-mode/casbin-csv.ts","editor/editor.tsx","editor/syntax.tsx","editor/settings.tsx","editor/use-local-storage.tsx","editor/share.tsx","editor/copy.tsx","editor/index.tsx","index.tsx"],"names":["parseABACRequest","line","value","objectToken","parseToObject","request","i","length","eval","trim","push","Error","enforcer","props","a","startTime","performance","now","result","newEnforcer","newModel","model","policy","MemoryAdapter","undefined","e","customConfigCode","customConfig","builtinFunc","keyMatch","Util","keyMatchFunc","keyGet","keyGetFunc","keyMatch2","keyMatch2Func","keyGet2","keyGet2Func","keyMatch3","keyMatch3Func","keyMatch4","keyMatch4Func","regexMatch","regexMatchFunc","ipMatch","ipMatchFunc","globMatch","config","functions","Object","keys","forEach","key","addFunction","rm","getRoleManager","matchingForGFunction","addMatchingFunc","onResponse","type","matchingDomainForGFunction","addDomainMatchingFunc","message","requests","split","n","rvals","enforce","stopTime","toFixed","RunTest","style","marginRight","onClick","Button","styled","button","HeaderTitle","h4","FlexRow","div","EditorContainer","Echo","span","defaultProps","Footer","Persist","example","basic","name","basic_with_root","basic_without_resources","basic_without_users","rbac","rbac_with_resource_roles","rbac_with_domains","rbac_with_pattern","rbac_with_all_pattern","rbac_with_deny","abac","abac_with_policy_rule","keymatch","keymatch2","ipmatch","priority","defaultCustomConfig","getKey","persist","modelName","toUpperCase","getSelectedModel","v","window","localStorage","getItem","MODEL","toString","get","data","m","POLICY","REQUEST","CUSTOM_FUNCTION","set","text","setItem","SelectModel","defaultValue","onChange","target","disabled","map","console","log","CodeMirror","defineMode","tokenBase","stream","state","ch","peek","match","sec","skipTo","eat","skipToEnd","after_equal","sol","RegExp","next","comma","dot","startState","tokenize","token","CasbinCodeMirror","className","onBeforeChange","editor","options","content","CustomFunctionEditor","height","lineNumbers","indentUnit","styleActiveLine","matchBrackets","mode","lineWrapping","theme","ModelEditor","PolicyEditor","RequestEditor","RequestResultEditor","readOnly","Syntax","Config","newConfigFromText","Container","open","ToggleButtonContainer","Settings","React","useState","stickyValue","JSON","parse","setValue","useEffect","stringify","useLocalStorage","setOpen","width","transform","viewBox","fill","d","display","flexDirection","flexGrow","margin","flex","onCustomConfigChange","fetch","method","headers","body","encodeURIComponent","response","Share","sharing","setSharing","shareInfo","shareContent","dpaste","then","url","hash","Copy","location","origin","pathname","document","addEventListener","listener","clipboardData","setData","preventDefault","removeEventListener","execCommand","cb","EditorScreen","modelKind","setModelKind","modelText","setModelText","setPolicy","setRequest","echo","setEcho","requestResult","setRequestResult","setCustomConfig","share","setShare","setPolicyPersistent","setModelTextPersistent","setCustomConfigPersistent","setRequestPersistent","slice","resp","sharedContent","catch","confirm","hasOwnProperty","index","parseInt","removeItem","reset","reload","marginLeft","padding","component","isValidElement","Array","isArray","join","currentPath","handleShare","App","rel","href","alt","src","color","float","fontSize","Date","getFullYear","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.3c3eb3e7.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Echo } from '../ui';\nimport { DefaultRoleManager, newEnforcer, newModel, MemoryAdapter, Util } from 'casbin';\n\ninterface RunTestProps {\n  model: string;\n  modelKind: string;\n  policy: string;\n  customConfig: string;\n  request: string;\n  onResponse: (com: JSX.Element | any[]) => void;\n  // parseABAC: boolean;\n}\n\nfunction parseABACRequest(line: string): any[] {\n  let value: string | Record<string, any> = '';\n  let objectToken = 0;\n  let parseToObject = false;\n  const request = [];\n\n  for (let i = 0; i < line.length; i++) {\n    if (objectToken === 0 && line[i] === ',') {\n      if (parseToObject) {\n        // eslint-disable-next-line\n        value = eval(`(${value})`);\n      }\n      if (typeof value === 'string') {\n        value = value.trim();\n      }\n      request.push(value);\n\n      value = '';\n      parseToObject = false;\n      continue;\n    }\n\n    value += line[i];\n\n    if (line[i] === '{') {\n      parseToObject = true;\n      objectToken++;\n      continue;\n    }\n\n    if (line[i] === '}') {\n      objectToken--;\n    }\n  }\n\n  if (objectToken !== 0) {\n    throw new Error(`invalid request ${line}`);\n  }\n\n  if (value) {\n    if (parseToObject) {\n      // eslint-disable-next-line\n      value = eval(`(${value})`);\n    }\n    if (typeof value === 'string') {\n      value = value.trim();\n    }\n    request.push(value);\n  }\n\n  return request;\n}\n\nasync function enforcer(props: RunTestProps) {\n  const startTime = performance.now();\n  const result = [];\n  try {\n    const e = await newEnforcer(newModel(props.model), props.policy ? new MemoryAdapter(props.policy) : undefined);\n\n    const customConfigCode = props.customConfig;\n    if (customConfigCode) {\n      try {\n        const builtinFunc = {\n          keyMatch: Util.keyMatchFunc,\n          keyGet: Util.keyGetFunc,\n          keyMatch2: Util.keyMatch2Func,\n          keyGet2: Util.keyGet2Func,\n          keyMatch3: Util.keyMatch3Func,\n          keyMatch4: Util.keyMatch4Func,\n          regexMatch: Util.regexMatchFunc,\n          ipMatch: Util.ipMatchFunc,\n          globMatch: Util.globMatch\n        };\n\n        // eslint-disable-next-line\n        let config = eval(customConfigCode);\n        if (config) {\n          config = { ...config, functions: { ...config.functions, ...builtinFunc } };\n          if (config?.functions) {\n            Object.keys(config.functions).forEach(key => e.addFunction(key, config.functions[key]));\n          }\n\n          const rm = e.getRoleManager() as DefaultRoleManager;\n          const matchingForGFunction = config.matchingForGFunction;\n          if (matchingForGFunction) {\n            if (typeof matchingForGFunction === 'function') {\n              await rm.addMatchingFunc(matchingForGFunction);\n            }\n            if (typeof matchingForGFunction === 'string') {\n              if (matchingForGFunction in config.functions) {\n                await rm.addMatchingFunc(config.functions[matchingForGFunction]);\n              } else {\n                props.onResponse(<Echo type={'error'}>Must sure the {matchingForGFunction}() in config.functions</Echo>);\n                return;\n              }\n            }\n          }\n\n          const matchingDomainForGFunction = config.matchingDomainForGFunction;\n          if (matchingDomainForGFunction) {\n            if (typeof matchingDomainForGFunction === 'function') {\n              await rm.addDomainMatchingFunc(matchingDomainForGFunction);\n            }\n            if (typeof matchingDomainForGFunction === 'string') {\n              if (matchingDomainForGFunction in config.functions) {\n                await rm.addDomainMatchingFunc(config.functions[matchingDomainForGFunction]);\n              } else {\n                props.onResponse(<Echo type={'error'}>Must sure the {matchingDomainForGFunction}() in config.functions</Echo>);\n                return;\n              }\n            }\n          }\n        }\n      } catch (e) {\n        props.onResponse(<Echo type={'error'}>Please check syntax in Custom Function Editor: {e.message}</Echo>);\n        return;\n      }\n    }\n\n    const requests = props.request.split('\\n');\n\n    for (const n of requests) {\n      const line = n.trim();\n      if (!line) {\n        result.push('// ignore');\n        continue;\n      }\n\n      if (line[0] === '#') {\n        result.push('// ignore');\n        continue;\n      }\n\n      const rvals = parseABACRequest(n);\n      result.push(await e.enforce(...rvals));\n    }\n\n    const stopTime = performance.now();\n\n    props.onResponse(<Echo>{'Done in ' + (stopTime - startTime).toFixed(2) + 'ms'}</Echo>);\n    props.onResponse(result);\n  } catch (e) {\n    props.onResponse(<Echo type={'error'}>{e.message}</Echo>);\n    props.onResponse([]);\n  }\n}\n\nconst RunTest = (props: RunTestProps) => {\n  return (\n    <Button style={{ marginRight: 8 }} onClick={() => enforcer(props)}>\n      RUN THE TEST\n    </Button>\n  );\n};\n\nexport default RunTest;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  border: 1px solid #443d80;\n  border-radius: 3px;\n  color: #443d80;\n  display: inline-block;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.2em;\n  padding: 10px;\n  text-decoration: none !important;\n  text-transform: uppercase;\n  transition: background 0.3s, color 0.3s;\n\n  :hover {\n    background: #443d80;\n    color: #fff;\n  }\n`;\n\nexport const HeaderTitle = styled.h4`\n  padding: 8px;\n`;\n\nexport const FlexRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const EditorContainer = styled.div`\n  flex: 1;\n`;\n\ninterface EchoProps {\n  type?: 'pass' | 'error';\n}\n\nconst error = '#db4545';\nconst pass = '#39aa56';\n\nexport const Echo = styled.span<EchoProps>`\n  color: ${(props: EchoProps) => {\n    switch (props.type) {\n      case 'error':\n        return error;\n      case 'pass':\n        return pass;\n    }\n  }};\n  font-weight: 600;\n  font-size: 14px;\n`;\n\nEcho.defaultProps = {\n  type: 'pass'\n};\n\nexport const Footer = styled.div`\n  padding: 1em;\n  background: #222;\n`;\n","import { defaultCustomConfig, example, ModelKind } from './casbin-mode/example';\n\nexport const DEFAULT_MODEL: ModelKind = 'basic';\n\nexport enum Persist {\n  MODEL,\n  POLICY,\n  REQUEST,\n  CUSTOM_FUNCTION\n}\n\nfunction getKey(persist: Persist, modelName: string) {\n  return `${modelName.toUpperCase()}_${Persist[persist]}`;\n}\n\nexport function getSelectedModel(): ModelKind {\n  const v = window.localStorage.getItem(Persist[Persist.MODEL].toString());\n  return (v ? v : DEFAULT_MODEL) as ModelKind;\n}\n\nexport function setSelectedModel(value: string) {\n  window.localStorage.setItem(Persist[Persist.MODEL], value);\n}\n\nexport function get(persist: Persist, modelName: ModelKind = DEFAULT_MODEL) {\n  const data = window.localStorage.getItem(getKey(persist, modelName));\n\n  if (data) {\n    return data;\n  }\n\n  const m = example[modelName];\n  switch (persist) {\n    case Persist.MODEL:\n      return m.model;\n    case Persist.POLICY:\n      return m.policy;\n    case Persist.REQUEST:\n      return m.request;\n    case Persist.CUSTOM_FUNCTION:\n      return m.customConfig ? m.customConfig : defaultCustomConfig;\n  }\n}\n\nexport function set(persist: Persist, text: string) {\n  const modelName = getSelectedModel() || DEFAULT_MODEL;\n  window.localStorage.setItem(getKey(persist, modelName), text);\n}\n\nexport function reset(modelName: string) {\n  for (const m in Persist) {\n    if (!Persist.hasOwnProperty(m)) {\n      continue;\n    }\n    const index = parseInt(m, 10);\n    window.localStorage.removeItem(getKey(index, modelName));\n  }\n}\n","/* eslint-disable @typescript-eslint/camelcase */\nexport const example = {\n  basic: {\n    name: 'ACL',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = r.sub == p.sub && r.obj == p.obj && r.act == p.act`,\n    policy: `p, alice, data1, read\np, bob, data2, write`,\n    request: `alice, data1, read`,\n    customConfig: undefined\n  },\n  basic_with_root: {\n    name: 'ACL with superuser',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = r.sub == p.sub && r.obj == p.obj && r.act == p.act || r.sub == \"root\"`,\n    policy: `p, alice, data1, read\np, bob, data2, write`,\n    request: `alice, data1, read`,\n    customConfig: undefined\n  },\n  basic_without_resources: {\n    name: 'ACL without resources',\n    model: `[request_definition]\nr = sub, act\n\n[policy_definition]\np = sub, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = r.sub == p.sub && r.act == p.act`,\n    policy: `p, alice, read\np, bob, write`,\n    request: `alice, read`,\n    customConfig: undefined\n  },\n  basic_without_users: {\n    name: 'ACL without users',\n    model: `[request_definition]\nr = obj, act\n\n[policy_definition]\np = obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = r.obj == p.obj && r.act == p.act`,\n    policy: `p, data1, read\np, data2, write`,\n    request: `data1, read`,\n    customConfig: undefined\n  },\n  rbac: {\n    name: 'RBAC',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act`,\n    policy: `p, alice, data1, read\np, bob, data2, write\np, data2_admin, data2, read\np, data2_admin, data2, write\n\ng, alice, data2_admin`,\n    request: `alice, data2, read`,\n    customConfig: undefined\n  },\n  rbac_with_resource_roles: {\n    name: 'RBAC with resource roles',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\ng2 = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && g2(r.obj, p.obj) && r.act == p.act`,\n    policy: `p, alice, data1, read\np, bob, data2, write\np, data_group_admin, data_group, write\n\ng, alice, data_group_admin\ng2, data1, data_group\ng2, data2, data_group`,\n    request: `alice, data1, read\nalice, data1, write\nalice, data2, read\nalice, data2, write `,\n\n    customConfig: undefined\n  },\n  rbac_with_domains: {\n    name: 'RBAC with domains/tenants',\n    model: `[request_definition]\nr = sub, dom, obj, act\n\n[policy_definition]\np = sub, dom, obj, act\n\n[role_definition]\ng = _, _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub, r.dom) && r.dom == p.dom && r.obj == p.obj && r.act == p.act`,\n    policy: `p, admin, domain1, data1, read\np, admin, domain1, data1, write\np, admin, domain2, data2, read\np, admin, domain2, data2, write\n\ng, alice, admin, domain1\ng, bob, admin, domain2`,\n    request: `alice, domain1, data1, read`,\n    customConfig: undefined\n  },\n  rbac_with_pattern: {\n    name: 'RBAC with pattern',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && regexMatch(r.act, p.act)`,\n    policy: `p, pen_admin, data1, GET\ng, /book/:id, pen_admin\n`,\n    request: `/book/1, data1, GET`,\n    customConfig: `(function() {\n  return {\n    /**\n     * Here is custom functions for Casbin.\n     * Currently, there are built-in globMatch, keyMatch, keyMatch2, keyMatch3, keyMatch4, regexMatch, ipMatch.\n     * See https://casbin.org/docs/en/function#functions-in-matchers for more details.\n     */\n    functions: {},\n    /**\n     * The value comes from config.functions, Casbin will not use this configuration if the value is undefined.\n     * See https://casbin.org/docs/en/rbac#use-pattern-matching-in-rbac for more details.\n     * example:\n     * matchingForGFunction: 'globMatch'\n     * matchingDomainForGFunction: 'keyMatch'\n     */\n    matchingForGFunction: 'keyMatch2',\n    matchingDomainForGFunction: undefined\n  };\n})();`\n  },\n  rbac_with_all_pattern: {\n    name: 'RBAC with all pattern',\n    model: `[request_definition]\nr = sub, dom, obj, act\n\n[policy_definition]\np = sub, dom, obj, act\n\n[role_definition]\ng = _, _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub, r.dom) && r.dom == p.dom && r.obj == p.obj &&  r.act == p.act`,\n    policy: `p, book_group, domain1, data1, read\np, book_group, domain2, data2, write\n\ng, /book/:id, book_group, *`,\n    request: `/book/1, domain1, data1, read\n/book/1, domain2, data2, write\n`,\n    customConfig: `(function() {\n  return {\n    /**\n     * Here is custom functions for Casbin.\n     * Currently, there are built-in globMatch, keyMatch, keyMatch2, keyMatch3, keyMatch4, regexMatch, ipMatch.\n     */\n    functions: {},\n    /**\n     * The value comes from config.functions, Casbin will not use this configuration if the value is undefined.\n     * example:\n     * matchingForGFunction: 'globMatch'\n     * matchingDomainForGFunction: 'keyMatch'\n     */\n    matchingForGFunction: 'keyMatch2',\n    matchingDomainForGFunction: 'keyMatch2'\n  };\n})();`\n  },\n  rbac_with_deny: {\n    name: 'RBAC with deny-override',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act, eft\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow)) && !some(where (p.eft == deny))\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act`,\n    policy: `p, alice, data1, read, allow\np, bob, data2, write, allow\np, data2_admin, data2, read, allow\np, data2_admin, data2, write, allow\np, alice, data2, write, deny\n\ng, alice, data2_admin`,\n    request: `alice, data1, read\nalice, data2, write`,\n    customConfig: undefined\n  },\n  abac: {\n    name: 'ABAC',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = r.sub == r.obj.Owner`,\n    policy: '',\n    request: `alice, { Owner: 'alice'}\nalice, { Owner: 'bob'}`,\n    customConfig: undefined\n  },\n  abac_with_policy_rule: {\n    name: 'ABAC with policy rule',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub_rule, obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = eval(p.sub_rule) && r.obj == p.obj && r.act == p.act`,\n    policy: `p, r.sub.Age > 18 && r.sub.Age < 60, /data1, read\n`,\n    request: `{ Age: 30}, /data1, read`,\n    customConfig: undefined\n  },\n  keymatch: {\n    name: 'RESTful (KeyMatch)',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = r.sub == p.sub && keyMatch(r.obj, p.obj) && regexMatch(r.act, p.act)`,\n    policy: `p, alice, /alice_data/*, GET\np, alice, /alice_data/resource1, POST\n\np, bob, /alice_data/resource2, GET\np, bob, /bob_data/*, POST\n\np, cathy, /cathy_data, (GET)|(POST)`,\n    request: 'alice, /alice_data/hello, GET',\n    customConfig: undefined\n  },\n  keymatch2: {\n    name: 'RESTful (KeyMatch2)',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = r.sub == p.sub && keyMatch2(r.obj, p.obj) && regexMatch(r.act, p.act)`,\n    policy: `p, alice, /alice_data/:resource, GET\np, alice, /alice_data2/:id/using/:resId, GET`,\n    request: `alice, /alice_data/hello, GET\nalice, /alice_data/hello, POST`,\n    customConfig: undefined\n  },\n  ipmatch: {\n    name: 'IP match',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = ipMatch(r.sub, p.sub) && r.obj == p.obj && r.act == p.act`,\n    policy: `p, 192.168.2.0/24, data1, read\np, 10.0.0.0/16, data2, write`,\n    request: `192.168.2.1, data1, read\n10.0.2.3, data2, write`,\n    customConfig: undefined\n  },\n  priority: {\n    name: 'Priority',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act, eft\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = priority(p.eft) || deny\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act`,\n    policy: `p, alice, data1, read, allow\np, data1_deny_group, data1, read, deny\np, data1_deny_group, data1, write, deny\np, alice, data1, write, allow\n\ng, alice, data1_deny_group\n\np, data2_allow_group, data2, read, allow\np, bob, data2, read, deny\np, bob, data2, write, deny\n\ng, bob, data2_allow_group`,\n    request: `alice, data1, read`,\n    customConfig: undefined\n  }\n};\n\nexport const defaultCustomConfig = `(function() {\n  return {\n    /**\n     * Here is custom functions for Casbin.\n     * Currently, there are built-in globMatch, keyMatch, keyMatch2, keyMatch3, keyMatch4, regexMatch, ipMatch.\n     */\n    functions: {},\n    /**\n     * If the value is undefined, the Casbin does not use it.\n     * example:\n     * matchingForGFunction: 'globMatch'\n     * matchingDomainForGFunction: 'keyMatch'\n     */\n    matchingForGFunction: undefined,\n    matchingDomainForGFunction: undefined\n  };\n})();`;\nexport type Example = typeof example;\nexport type ModelKind = keyof Example;\n","import React from 'react';\nimport { getSelectedModel, setSelectedModel } from './persist';\nimport { ModelKind, example } from './casbin-mode/example';\n\ninterface SelectModelProps {\n  onChange: (value: string) => void;\n}\n\nconst SelectModel = (props: SelectModelProps) => {\n  return (\n    <select\n      defaultValue={getSelectedModel()}\n      onChange={e => {\n        const model = e.target.value;\n        setSelectedModel(model);\n        props.onChange(model);\n      }}\n    >\n      <option value=\"\" disabled>\n        Select your model\n      </option>\n      {Object.keys(example).map(n => (\n        <option key={n} value={n}>\n          {example[n as ModelKind].name}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nSelectModel.defaultProps = {\n  onChange: console.log,\n  defaultValue: 'basic'\n};\nexport default SelectModel;\n","// @ts-nocheck\nimport CodeMirror from 'codemirror';\n\nCodeMirror.defineMode('casbin-conf', function() {\n  function tokenBase(stream, state) {\n    const ch = stream.peek();\n    if (ch === '[') {\n      if (stream.match('[request_definition')) {\n        state.sec = 'r';\n        stream.skipTo(']');\n        stream.eat(']');\n        return 'header';\n      } else if (stream.match('[policy_definition')) {\n        state.sec = 'p';\n        stream.skipTo(']');\n        stream.eat(']');\n        return 'header';\n      } else if (stream.match('[role_definition')) {\n        state.sec = 'g';\n        stream.skipTo(']');\n        stream.eat(']');\n        return 'header';\n      } else if (stream.match('[policy_effect')) {\n        state.sec = 'e';\n        stream.skipTo(']');\n        stream.eat(']');\n        return 'header';\n      } else if (stream.match('[matchers')) {\n        state.sec = 'm';\n        stream.skipTo(']');\n        stream.eat(']');\n        return 'header';\n      } else {\n        state.sec = '';\n        stream.skipToEnd();\n        return '';\n      }\n    } else if (ch === '#') {\n      stream.skipToEnd();\n      return 'comment';\n    } else if (ch === '\"') {\n      stream.skipToEnd();\n      stream.skipTo('\"');\n      stream.eat('\"');\n      return 'string';\n    } else if (ch === '=') {\n      // eslint-disable-next-line @typescript-eslint/camelcase\n      state.after_equal = true;\n      stream.eat('=');\n    }\n\n    if (stream.sol()) {\n      // eslint-disable-next-line @typescript-eslint/camelcase\n      state.after_equal = false;\n    }\n\n    if (state.sec === '') {\n      stream.skipToEnd();\n      return '';\n    }\n\n    if (stream.sol()) {\n      if (state.sec !== '') {\n        if ((state.sec === 'g' && stream.match(new RegExp('^g[2-9]?'))) || stream.match(state.sec)) {\n          if (stream.peek() === ' ' || stream.peek() === '=') {\n            return 'builtin';\n          } else {\n            state.sec = '';\n            stream.next();\n            return;\n          }\n        } else {\n          state.sec = '';\n          stream.next();\n          return;\n        }\n      } else {\n        stream.next();\n        return;\n      }\n    }\n\n    if (!state.after_equal) {\n      stream.next();\n      return;\n    }\n\n    if (state.sec === 'r' || state.sec === 'p') {\n      // Match: r = [sub], [obj], [act]\n      //        p = [sub], [obj], [act]\n      if (state.comma) {\n        state.comma = false;\n        if (stream.match(new RegExp('^[_a-zA-Z][_a-zA-Z0-9]*'))) {\n          return 'property';\n        }\n      }\n      if (stream.eat(',') || stream.eat(' ')) {\n        state.comma = true;\n        return '';\n      }\n    } else if (state.sec === 'e') {\n      // Match: e = some(where (p.[eft] == allow))\n      if (state.dot) {\n        state.dot = false;\n        if (stream.match(new RegExp('^[_a-zA-Z][_a-zA-Z0-9]*'))) {\n          return 'property';\n        }\n      }\n      if (stream.eat('.')) {\n        state.dot = true;\n        return '';\n      }\n\n      // Match: e = some(where ([p].eft == allow))\n      if (stream.match('p') && stream.peek() === '.') {\n        return 'builtin';\n      }\n\n      // Match: e = [some]([where] (p.eft == allow))\n      if (stream.match('some') || stream.match('where') || stream.match('priority')) {\n        return 'keyword';\n      }\n\n      // Match: e = some(where (p.eft == [allow]))\n      if (stream.match('allow') || stream.match('deny')) {\n        return 'string';\n      }\n    } else if (state.sec === 'm') {\n      // Match: m = r.[sub] == p.[sub] && r.[obj] == p.[obj] && r.[act] == p.[act]\n      if (state.dot) {\n        state.dot = false;\n        if (stream.match(new RegExp('^[_a-zA-Z][_a-zA-Z0-9]*'))) {\n          return 'property';\n        }\n      }\n      if (stream.eat('.')) {\n        state.dot = true;\n        return '';\n      }\n\n      // Match: m = [r].sub == [p].sub && [r].obj == [p].obj && [r].act == [p].act\n      if ((stream.match('r') || stream.match('p')) && stream.peek() === '.') {\n        return 'builtin';\n      }\n\n      // Match: m = [g](r.sub, p.sub) && r.obj == p.obj && r.act == p.act\n      if (stream.match(new RegExp('^[_a-zA-Z][_a-zA-Z0-9]*')) && stream.peek() === '(') {\n        return 'def';\n      }\n    }\n\n    stream.next();\n  }\n\n  return {\n    startState: function() {\n      return { tokenize: tokenBase };\n    },\n    token: function(stream, state) {\n      return state.tokenize(stream, state);\n    }\n  };\n});\n","// @ts-nocheck\nimport CodeMirror from 'codemirror';\n\nCodeMirror.defineMode('casbin-csv', function() {\n  function tokenBase(stream, state) {\n    const ch = stream.peek();\n\n    if (ch === '#') {\n      stream.skipToEnd();\n      return 'comment';\n    } else if (ch === ',') {\n      stream.eat(',');\n      return '';\n    }\n\n    if (stream.sol() && stream.match('p')) {\n      return 'def';\n    }\n    if (stream.sol() && (stream.match('g2') || stream.match('g'))) {\n      return 'keyword';\n    }\n\n    if (stream.skipTo(',')) {\n      return 'string';\n    }\n\n    stream.skipToEnd();\n    return 'property';\n\n    // stream.next();\n  }\n\n  return {\n    startState: function() {\n      return { tokenize: tokenBase };\n    },\n    token: function(stream, state) {\n      return state.tokenize(stream, state);\n    }\n  };\n});\n","import React, { CSSProperties } from 'react';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\n\nimport * as codemirror from 'codemirror';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/monokai.css';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/mathematica/mathematica';\nimport 'codemirror/addon/selection/active-line';\nimport 'codemirror/addon/edit/matchbrackets';\nimport 'codemirror/addon/display/placeholder';\nimport './casbin-mode/casbin-conf';\nimport './casbin-mode/casbin-csv';\nimport './editor.css';\n\ninterface CasbinCodeMirror {\n  content: string;\n  options: codemirror.EditorConfiguration;\n  style?: CSSProperties;\n  onChange: (text: string) => void;\n  className?: string;\n}\n\ninterface EditorProps {\n  text: string;\n  onChange?: (text: string) => void;\n  style?: CSSProperties;\n}\n\nconst CasbinCodeMirror = (props: CasbinCodeMirror) => {\n  return (\n    <div style={props.style} className={props.className}>\n      <CodeMirror\n        onBeforeChange={(editor, data, value) => {\n          props.onChange(value);\n        }}\n        options={props.options}\n        value={props.content}\n      />\n    </div>\n  );\n};\n\nCasbinCodeMirror.defaultProps = {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onChange: () => {}\n};\n\nexport const CustomFunctionEditor = (props: EditorProps) => {\n  return (\n    <CasbinCodeMirror\n      style={{ height: '100%' }}\n      content={props.text}\n      options={{\n        lineNumbers: true,\n        indentUnit: 4,\n        styleActiveLine: true,\n        matchBrackets: true,\n        mode: 'javascript',\n        lineWrapping: true,\n        theme: 'monokai'\n      }}\n      className={'function'}\n      {...props}\n    />\n  );\n};\n\nexport const ModelEditor = (props: EditorProps) => {\n  return (\n    <CasbinCodeMirror\n      content={props.text}\n      options={{\n        lineNumbers: true,\n        indentUnit: 4,\n        styleActiveLine: true,\n        matchBrackets: true,\n        mode: 'casbin-conf',\n        lineWrapping: true,\n        theme: 'monokai'\n      }}\n      {...props}\n    />\n  );\n};\n\nexport const PolicyEditor = (props: EditorProps) => {\n  return (\n    <CasbinCodeMirror\n      content={props.text}\n      options={{\n        lineNumbers: true,\n        indentUnit: 4,\n        styleActiveLine: true,\n        matchBrackets: true,\n        mode: 'casbin-csv',\n        lineWrapping: true,\n        theme: 'monokai'\n      }}\n      {...props}\n    />\n  );\n};\n\nexport const RequestEditor = (props: EditorProps) => {\n  return (\n    <CasbinCodeMirror\n      content={props.text}\n      options={{\n        lineNumbers: true,\n        indentUnit: 4,\n        styleActiveLine: true,\n        matchBrackets: true,\n        mode: 'mathematica',\n        lineWrapping: true,\n        theme: 'monokai'\n      }}\n      {...props}\n    />\n  );\n};\n\ninterface RequestResultEditorProps {\n  value: string;\n  style?: CSSProperties;\n}\n\nexport const RequestResultEditor = (props: RequestResultEditorProps) => {\n  return (\n    <div style={props.style}>\n      <CodeMirror\n        onBeforeChange={() => {\n          return;\n        }}\n        value={props.value}\n        options={{\n          readOnly: true,\n          indentUnit: 4,\n          styleActiveLine: true,\n          matchBrackets: true,\n          mode: 'javascript',\n          lineWrapping: true,\n          theme: 'monokai'\n        }}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Button, Echo } from '../ui';\nimport { Config } from 'casbin';\n\ninterface SyntaxProps {\n  model: string;\n  onResponse: (com: JSX.Element) => void;\n}\n\nconst Syntax = (props: SyntaxProps) => {\n  return (\n    <Button\n      style={{ marginRight: 8 }}\n      onClick={() => {\n        try {\n          Config.newConfigFromText(props.model);\n          props.onResponse(<Echo>Passed</Echo>);\n        } catch (e) {\n          props.onResponse(<Echo type={'error'}>{e.message}</Echo>);\n        }\n      }}\n    >\n      SYNTAX VALIDATE\n    </Button>\n  );\n};\n\nexport default Syntax;\n","import React from 'react';\n\nimport styled from 'styled-components';\nimport { CustomFunctionEditor } from './editor';\nimport { useLocalStorage } from './use-local-storage';\n\nconst Container = styled.div<{ open: boolean }>`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  border-right: 1px solid #ddd;\n  background: #ffffff;\n  width: ${props => (props.open ? '18rem' : '1rem')};\n  padding: ${props => (props.open ? '1rem' : 0)};\n`;\n\nconst ToggleButtonContainer = styled.div`\n  display: block;\n  cursor: pointer;\n  position: absolute;\n  top: 2px;\n  border-radius: 50%;\n  background: #ffffff;\n  right: -0.75rem;\n  height: 1.5rem;\n  width: 1.5rem;\n  color: #000000;\n  box-shadow: rgb(9 30 66 / 8%) 0 0 0 1px, rgb(9 30 66 / 8%) 0 2px 4px 1px;\n\n  ${Container}:hover & {\n    display: block;\n  }\n`;\n\ninterface SettingsProps {\n  text: string;\n  // enableABAC: boolean;\n  // onEnableABAC: (v: boolean) => void;\n  onCustomConfigChange: (text: string) => void;\n}\n\nexport function Settings(props: SettingsProps) {\n  const [open, setOpen] = useLocalStorage(true, 'SETTINGS_OPEN');\n\n  return (\n    <Container open={open}>\n      <ToggleButtonContainer onClick={() => setOpen(!open)}>\n        <svg style={{ width: '100%', height: '100%', transform: open ? 'rotateZ(0deg)' : 'rotateZ(180deg)' }} viewBox=\"0 0 24 24\">\n          <path fill={'currentColor'} d=\"M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z\" />\n        </svg>\n      </ToggleButtonContainer>\n\n      <div style={{ display: open ? 'flex' : 'none', flexDirection: 'column', flexGrow: 1 }}>\n        <div style={{ display: 'flex', flexDirection: 'column', flexGrow: 1 }}>\n          <span style={{ margin: '0.5rem 0' }}>Custom config</span>\n          <CustomFunctionEditor style={{ flex: 1 }} text={props.text} onChange={props.onCustomConfigChange} />\n        </div>\n      </div>\n    </Container>\n  );\n}\n","import React from 'react';\n\nexport function useLocalStorage(defaultValue: any, key: string) {\n  const [value, setValue] = React.useState(() => {\n    const stickyValue = window.localStorage.getItem(key);\n    return stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\n  });\n  React.useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n\n  return [value, setValue];\n}\n","import { Button, Echo } from '../ui';\nimport React, { useState } from 'react';\n\ninterface ShareProps extends ShareFormat {\n  onResponse: (info: JSX.Element | string) => void;\n}\n\nexport interface ShareFormat {\n  model: string;\n  policy: string;\n  customConfig: string;\n  request: string;\n}\n\nasync function dpaste(content: string) {\n  const response = await fetch('https://dpaste.com/api/', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    body: `content=${encodeURIComponent(content)}&syntax=json&title=${encodeURIComponent('Casbin Shared Content')}&expiry_days=200`\n  });\n  return response.text();\n}\n\nconst Share = (props: ShareProps) => {\n  const [sharing, setSharing] = useState(false);\n\n  function shareInfo(props: ShareProps) {\n    if (sharing) return;\n    setSharing(true);\n    props.onResponse(<Echo>Sharing...</Echo>);\n    const shareContent: ShareFormat = {\n      model: props.model,\n      policy: props.policy,\n      customConfig: props.customConfig,\n      request: props.request\n    };\n    dpaste(JSON.stringify(shareContent)).then((url: string) => {\n      setSharing(false);\n      const hash = url.split('/')[3];\n      props.onResponse(hash);\n    });\n  }\n\n  return (\n    <Button style={{ marginRight: 8 }} onClick={() => shareInfo(props)}>\n      SHARE\n    </Button>\n  );\n};\n\nexport default Share;\n","import { Button } from '../ui';\nimport React from 'react';\n\ninterface CopyProps {\n  content: string;\n  cb: () => void;\n}\n\nconst Copy = (props: CopyProps) => {\n  function copy(data: string): void {\n    const listener = (e: ClipboardEvent) => {\n      if (!e.clipboardData) {\n        throw new Error('Clipboard API unavailable.');\n      }\n      e.clipboardData.setData('text/plain', data);\n      e.preventDefault();\n      document.removeEventListener('copy', listener);\n    };\n    document.addEventListener('copy', listener);\n    document.execCommand('copy');\n    props.cb();\n  }\n\n  return (\n    <Button style={{ marginRight: 8 }} onClick={() => copy(`${window.location.origin + window.location.pathname}#${props.content}`)}>\n      COPY\n    </Button>\n  );\n};\n\nexport default Copy;\n","import React, { isValidElement, useEffect, useState } from 'react';\nimport SelectModel from './select-model';\nimport { Button, Echo, EditorContainer, FlexRow, HeaderTitle } from '../ui';\nimport { get, getSelectedModel, Persist, reset, set } from './persist';\nimport { ModelEditor, PolicyEditor, RequestEditor, RequestResultEditor } from './editor';\nimport Syntax from './syntax';\nimport RunTest from './run-test';\nimport { ModelKind } from './casbin-mode/example';\nimport { Settings } from './settings';\nimport styled from 'styled-components';\n// import { useLocalStorage } from './use-local-storage';\nimport Share, { ShareFormat } from './share';\nimport Copy from './copy';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const EditorScreen = () => {\n  const [modelKind, setModelKind] = useState<ModelKind>(getSelectedModel());\n  const [modelText, setModelText] = useState('');\n  const [policy, setPolicy] = useState('');\n  const [request, setRequest] = useState('');\n  const [echo, setEcho] = useState<JSX.Element>(<></>);\n  const [requestResult, setRequestResult] = useState('');\n  const [customConfig, setCustomConfig] = useState('');\n  const [share, setShare] = useState('');\n\n  function setPolicyPersistent(text: string): void {\n    set(Persist.POLICY, text);\n    setPolicy(text);\n  }\n\n  function setModelTextPersistent(text: string): void {\n    set(Persist.MODEL, text);\n    setModelText(text);\n  }\n\n  function setCustomConfigPersistent(text: string): void {\n    set(Persist.CUSTOM_FUNCTION, text);\n    setCustomConfig(text);\n  }\n\n  function setRequestPersistent(text: string): void {\n    set(Persist.REQUEST, text);\n    setRequest(text);\n  }\n\n  useEffect(() => {\n    const hash = window.location.hash.slice(1);\n    if (hash) {\n      setEcho(<Echo>Loading Shared Content...</Echo>);\n      fetch(`https://dpaste.com/${hash}.txt`)\n        .then(resp => resp.text())\n        .then(content => {\n          const sharedContent = JSON.parse(content) as ShareFormat;\n          setPolicyPersistent(sharedContent.policy);\n          setModelTextPersistent(sharedContent.model);\n          setCustomConfigPersistent(sharedContent.customConfig);\n          setRequestPersistent(sharedContent.request);\n          setRequestResult('');\n          window.location.hash = ''; // prevent duplicate load\n          setEcho(<Echo>Shared Content Loaded.</Echo>);\n        })\n        .catch(() => {\n          setEcho(<Echo type={'error'}>Failed to load Shared Content.</Echo>);\n        });\n    }\n  }, []);\n\n  useEffect(() => {\n    setPolicy(get(Persist.POLICY, modelKind));\n    setModelText(get(Persist.MODEL, modelKind));\n    setRequest(get(Persist.REQUEST, modelKind));\n    setCustomConfig(get(Persist.CUSTOM_FUNCTION, modelKind));\n  }, [modelKind]);\n\n  function handleShare(v: JSX.Element | string) {\n    if (isValidElement(v)) {\n      setEcho(v);\n    } else {\n      const currentPath = window.location.origin + window.location.pathname;\n      setShare(v as string);\n      setEcho(<Echo>{`Shared at ${currentPath}#${v}`}</Echo>);\n    }\n  }\n\n  return (\n    <Container>\n      <Settings\n        text={customConfig}\n        onCustomConfigChange={v => {\n          setCustomConfigPersistent(v);\n        }}\n      />\n      <div style={{ flex: 1 }}>\n        <FlexRow>\n          <EditorContainer>\n            <FlexRow>\n              <HeaderTitle>Model</HeaderTitle>\n              <SelectModel\n                onChange={value => {\n                  setModelKind(value as ModelKind);\n                }}\n              />\n              <Button\n                onClick={() => {\n                  const ok = window.confirm('Confirm Reset?');\n                  if (ok) {\n                    reset(modelKind);\n                    window.location.reload();\n                  }\n                }}\n                style={{ marginLeft: 8 }}\n              >\n                Reset\n              </Button>\n            </FlexRow>\n            <ModelEditor text={modelText} onChange={setModelTextPersistent} />\n          </EditorContainer>\n          <EditorContainer>\n            <HeaderTitle>Policy</HeaderTitle>\n            <PolicyEditor text={policy} onChange={setPolicyPersistent} />\n          </EditorContainer>\n        </FlexRow>\n\n        <FlexRow>\n          <EditorContainer>\n            <HeaderTitle>Request</HeaderTitle>\n            <RequestEditor text={request} onChange={setRequestPersistent} />\n          </EditorContainer>\n          <EditorContainer>\n            <HeaderTitle>Enforcement Result</HeaderTitle>\n            <RequestResultEditor value={requestResult} />\n          </EditorContainer>\n        </FlexRow>\n\n        <div style={{ padding: 8 }}>\n          <Syntax model={modelText} onResponse={component => setEcho(component)} />\n          <RunTest\n            modelKind={modelKind}\n            model={modelText}\n            policy={policy}\n            customConfig={customConfig}\n            request={request}\n            onResponse={v => {\n              if (isValidElement(v)) {\n                setEcho(v);\n              } else if (Array.isArray(v)) {\n                setRequestResult(v.join('\\n'));\n              }\n            }}\n          />\n          {!share ? (\n            <Share onResponse={v => handleShare(v)} model={modelText} policy={policy} customConfig={customConfig} request={request} />\n          ) : (\n            <Copy\n              content={share}\n              cb={() => {\n                setShare('');\n                setEcho(<Echo>Copied.</Echo>);\n              }}\n            />\n          )}\n          <div style={{ display: 'inline-block' }}>{echo}</div>\n        </div>\n      </div>\n    </Container>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { EditorScreen } from './editor';\nimport { Footer } from './ui';\nimport 'normalize.css/normalize.css';\n\nconst App = () => (\n  <>\n    <EditorScreen />\n\n    <Footer>\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/casbin/casbin-editor\">\n        <img alt=\"GitHub stars\" src=\"https://img.shields.io/github/stars/casbin/casbin-editor?style=social\" />\n      </a>\n      <span style={{ color: '#FFFFFF', float: 'right', fontSize: 14 }}>Copyright © {new Date().getFullYear()} Casbin contributors.</span>\n    </Footer>\n  </>\n);\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}