{"version":3,"sources":["editor/persist.ts","editor/casbin-mode/example.ts","editor/select-model.tsx","editor/casbin-mode/casbin-conf.ts","editor/casbin-mode/casbin-csv.ts","editor/editor.tsx","editor/syntax.tsx","editor/settings.tsx","editor/use-local-storage.tsx","editor/share.tsx","editor/copy.tsx","editor/index.tsx","index.tsx","ui.tsx","editor/run-test.tsx"],"names":["Persist","example","basic","name","model","policy","request","customConfig","undefined","basic_with_root","basic_without_resources","basic_without_users","rbac","rbac_with_resource_roles","rbac_with_domains","rbac_with_pattern","rbac_with_all_pattern","rbac_with_deny","abac","abac_with_policy_rule","keymatch","keymatch2","ipmatch","priority","defaultCustomConfig","getKey","persist","modelName","toUpperCase","getSelectedModel","v","window","localStorage","getItem","MODEL","toString","get","data","m","POLICY","REQUEST","CUSTOM_FUNCTION","set","text","setItem","SelectModel","props","defaultValue","onChange","e","value","target","disabled","Object","keys","map","n","key","defaultProps","console","log","CodeMirror","defineMode","tokenBase","stream","state","ch","peek","match","sec","skipTo","eat","skipToEnd","after_equal","sol","RegExp","next","comma","dot","startState","tokenize","token","CasbinCodeMirror","style","className","onBeforeChange","editor","options","content","CustomFunctionEditor","height","lineNumbers","indentUnit","styleActiveLine","matchBrackets","mode","lineWrapping","theme","ModelEditor","PolicyEditor","RequestEditor","RequestResultEditor","readOnly","Syntax","marginRight","onClick","Config","newConfigFromText","onResponse","type","message","Container","styled","div","open","ToggleButtonContainer","Settings","React","useState","stickyValue","JSON","parse","setValue","useEffect","stringify","useLocalStorage","setOpen","width","transform","viewBox","fill","d","display","flexDirection","flexGrow","margin","flex","onCustomConfigChange","a","fetch","method","headers","body","encodeURIComponent","response","Share","sharing","setSharing","shareInfo","shareContent","dpaste","then","url","hash","split","Copy","location","origin","pathname","document","addEventListener","listener","clipboardData","Error","setData","preventDefault","removeEventListener","execCommand","cb","EditorScreen","modelKind","setModelKind","modelText","setModelText","setPolicy","setRequest","echo","setEcho","requestResult","setRequestResult","setCustomConfig","share","setShare","setPolicyPersistent","setModelTextPersistent","setCustomConfigPersistent","setRequestPersistent","slice","resp","sharedContent","catch","confirm","hasOwnProperty","index","parseInt","removeItem","reset","reload","marginLeft","padding","component","isValidElement","Array","isArray","join","currentPath","handleShare","App","rel","href","alt","src","color","float","fontSize","Date","getFullYear","rootElement","getElementById","ReactDOM","render","Button","button","HeaderTitle","h4","FlexRow","EditorContainer","Echo","span","Footer","parseABACRequest","line","objectToken","parseToObject","i","length","eval","push","trim","enforcer","startTime","performance","now","result","newEnforcer","newModel","StringAdapter","customConfigCode","builtinFunc","keyMatch","Util","keyMatchFunc","keyGet","keyGetFunc","keyMatch2","keyMatch2Func","keyGet2","keyGet2Func","keyMatch3","keyMatch3Func","keyMatch4","keyMatch4Func","regexMatch","regexMatchFunc","ipMatch","ipMatchFunc","globMatch","config","functions","forEach","addFunction","rm","getRoleManager","matchingForGFunction","addMatchingFunc","matchingDomainForGFunction","addDomainMatchingFunc","requests","rvals","enforce","stopTime","toFixed","RunTest"],"mappings":"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","file":"static/js/main.ae91caa5.chunk.js","sourcesContent":["import { defaultCustomConfig, example, ModelKind } from './casbin-mode/example';\n\nexport const DEFAULT_MODEL: ModelKind = 'basic';\n\nexport enum Persist {\n  MODEL,\n  POLICY,\n  REQUEST,\n  CUSTOM_FUNCTION\n}\n\nfunction getKey(persist: Persist, modelName: string) {\n  return `${modelName.toUpperCase()}_${Persist[persist]}`;\n}\n\nexport function getSelectedModel(): ModelKind {\n  const v = window.localStorage.getItem(Persist[Persist.MODEL].toString());\n  return (v ? v : DEFAULT_MODEL) as ModelKind;\n}\n\nexport function setSelectedModel(value: string) {\n  window.localStorage.setItem(Persist[Persist.MODEL], value);\n}\n\nexport function get(persist: Persist, modelName: ModelKind = DEFAULT_MODEL) {\n  const data = window.localStorage.getItem(getKey(persist, modelName));\n\n  if (data) {\n    return data;\n  }\n\n  const m = example[modelName];\n  switch (persist) {\n    case Persist.MODEL:\n      return m.model;\n    case Persist.POLICY:\n      return m.policy;\n    case Persist.REQUEST:\n      return m.request;\n    case Persist.CUSTOM_FUNCTION:\n      return m.customConfig ? m.customConfig : defaultCustomConfig;\n  }\n}\n\nexport function set(persist: Persist, text: string) {\n  const modelName = getSelectedModel() || DEFAULT_MODEL;\n  window.localStorage.setItem(getKey(persist, modelName), text);\n}\n\nexport function reset(modelName: string) {\n  for (const m in Persist) {\n    if (!Persist.hasOwnProperty(m)) {\n      continue;\n    }\n    const index = parseInt(m, 10);\n    window.localStorage.removeItem(getKey(index, modelName));\n  }\n}\n","/* eslint-disable @typescript-eslint/camelcase */\nexport const example = {\n  basic: {\n    name: 'ACL',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = r.sub == p.sub && r.obj == p.obj && r.act == p.act`,\n    policy: `p, alice, data1, read\np, bob, data2, write`,\n    request: `alice, data1, read`,\n    customConfig: undefined\n  },\n  basic_with_root: {\n    name: 'ACL with superuser',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = r.sub == p.sub && r.obj == p.obj && r.act == p.act || r.sub == \"root\"`,\n    policy: `p, alice, data1, read\np, bob, data2, write`,\n    request: `alice, data1, read`,\n    customConfig: undefined\n  },\n  basic_without_resources: {\n    name: 'ACL without resources',\n    model: `[request_definition]\nr = sub, act\n\n[policy_definition]\np = sub, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = r.sub == p.sub && r.act == p.act`,\n    policy: `p, alice, read\np, bob, write`,\n    request: `alice, read`,\n    customConfig: undefined\n  },\n  basic_without_users: {\n    name: 'ACL without users',\n    model: `[request_definition]\nr = obj, act\n\n[policy_definition]\np = obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = r.obj == p.obj && r.act == p.act`,\n    policy: `p, data1, read\np, data2, write`,\n    request: `data1, read`,\n    customConfig: undefined\n  },\n  rbac: {\n    name: 'RBAC',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act`,\n    policy: `p, alice, data1, read\np, bob, data2, write\np, data2_admin, data2, read\np, data2_admin, data2, write\n\ng, alice, data2_admin`,\n    request: `alice, data2, read`,\n    customConfig: undefined\n  },\n  rbac_with_resource_roles: {\n    name: 'RBAC with resource roles',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\ng2 = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && g2(r.obj, p.obj) && r.act == p.act`,\n    policy: `p, alice, data1, read\np, bob, data2, write\np, data_group_admin, data_group, write\n\ng, alice, data_group_admin\ng2, data1, data_group\ng2, data2, data_group`,\n    request: `alice, data1, read\nalice, data1, write\nalice, data2, read\nalice, data2, write `,\n\n    customConfig: undefined\n  },\n  rbac_with_domains: {\n    name: 'RBAC with domains/tenants',\n    model: `[request_definition]\nr = sub, dom, obj, act\n\n[policy_definition]\np = sub, dom, obj, act\n\n[role_definition]\ng = _, _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub, r.dom) && r.dom == p.dom && r.obj == p.obj && r.act == p.act`,\n    policy: `p, admin, domain1, data1, read\np, admin, domain1, data1, write\np, admin, domain2, data2, read\np, admin, domain2, data2, write\n\ng, alice, admin, domain1\ng, bob, admin, domain2`,\n    request: `alice, domain1, data1, read`,\n    customConfig: undefined\n  },\n  rbac_with_pattern: {\n    name: 'RBAC with pattern',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub) && regexMatch(r.act, p.act)`,\n    policy: `p, pen_admin, data1, GET\ng, /book/:id, pen_admin\n`,\n    request: `/book/1, data1, GET`,\n    customConfig: `(function() {\n  return {\n    /**\n     * Here is custom functions for Casbin.\n     * Currently, there are built-in globMatch, keyMatch, keyMatch2, keyMatch3, keyMatch4, regexMatch, ipMatch.\n     * See https://casbin.org/docs/en/function#functions-in-matchers for more details.\n     */\n    functions: {},\n    /**\n     * The value comes from config.functions, Casbin will not use this configuration if the value is undefined.\n     * See https://casbin.org/docs/en/rbac#use-pattern-matching-in-rbac for more details.\n     * example:\n     * matchingForGFunction: 'globMatch'\n     * matchingDomainForGFunction: 'keyMatch'\n     */\n    matchingForGFunction: 'keyMatch2',\n    matchingDomainForGFunction: undefined\n  };\n})();`\n  },\n  rbac_with_all_pattern: {\n    name: 'RBAC with all pattern',\n    model: `[request_definition]\nr = sub, dom, obj, act\n\n[policy_definition]\np = sub, dom, obj, act\n\n[role_definition]\ng = _, _, _\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = g(r.sub, p.sub, r.dom) && r.dom == p.dom && r.obj == p.obj &&  r.act == p.act`,\n    policy: `p, book_group, domain1, data1, read\np, book_group, domain2, data2, write\n\ng, /book/:id, book_group, *`,\n    request: `/book/1, domain1, data1, read\n/book/1, domain2, data2, write\n`,\n    customConfig: `(function() {\n  return {\n    /**\n     * Here is custom functions for Casbin.\n     * Currently, there are built-in globMatch, keyMatch, keyMatch2, keyMatch3, keyMatch4, regexMatch, ipMatch.\n     */\n    functions: {},\n    /**\n     * The value comes from config.functions, Casbin will not use this configuration if the value is undefined.\n     * example:\n     * matchingForGFunction: 'globMatch'\n     * matchingDomainForGFunction: 'keyMatch'\n     */\n    matchingForGFunction: 'keyMatch2',\n    matchingDomainForGFunction: 'keyMatch2'\n  };\n})();`\n  },\n  rbac_with_deny: {\n    name: 'RBAC with deny-override',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act, eft\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = some(where (p.eft == allow)) && !some(where (p.eft == deny))\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act`,\n    policy: `p, alice, data1, read, allow\np, bob, data2, write, allow\np, data2_admin, data2, read, allow\np, data2_admin, data2, write, allow\np, alice, data2, write, deny\n\ng, alice, data2_admin`,\n    request: `alice, data1, read\nalice, data2, write`,\n    customConfig: undefined\n  },\n  abac: {\n    name: 'ABAC',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = r.sub == r.obj.Owner`,\n    policy: '',\n    request: `alice, { Owner: 'alice'}\nalice, { Owner: 'bob'}`,\n    customConfig: undefined\n  },\n  abac_with_policy_rule: {\n    name: 'ABAC with policy rule',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub_rule, obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = eval(p.sub_rule) && r.obj == p.obj && r.act == p.act`,\n    policy: `p, r.sub.Age > 18 && r.sub.Age < 60, /data1, read\n`,\n    request: `{ Age: 30}, /data1, read`,\n    customConfig: undefined\n  },\n  keymatch: {\n    name: 'RESTful (KeyMatch)',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = r.sub == p.sub && keyMatch(r.obj, p.obj) && regexMatch(r.act, p.act)`,\n    policy: `p, alice, /alice_data/*, GET\np, alice, /alice_data/resource1, POST\n\np, bob, /alice_data/resource2, GET\np, bob, /bob_data/*, POST\n\np, cathy, /cathy_data, (GET)|(POST)`,\n    request: 'alice, /alice_data/hello, GET',\n    customConfig: undefined\n  },\n  keymatch2: {\n    name: 'RESTful (KeyMatch2)',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = r.sub == p.sub && keyMatch2(r.obj, p.obj) && regexMatch(r.act, p.act)`,\n    policy: `p, alice, /alice_data/:resource, GET\np, alice, /alice_data2/:id/using/:resId, GET`,\n    request: `alice, /alice_data/hello, GET\nalice, /alice_data/hello, POST`,\n    customConfig: undefined\n  },\n  ipmatch: {\n    name: 'IP match',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act\n\n[policy_effect]\ne = some(where (p.eft == allow))\n\n[matchers]\nm = ipMatch(r.sub, p.sub) && r.obj == p.obj && r.act == p.act`,\n    policy: `p, 192.168.2.0/24, data1, read\np, 10.0.0.0/16, data2, write`,\n    request: `192.168.2.1, data1, read\n10.0.2.3, data2, write`,\n    customConfig: undefined\n  },\n  priority: {\n    name: 'Priority',\n    model: `[request_definition]\nr = sub, obj, act\n\n[policy_definition]\np = sub, obj, act, eft\n\n[role_definition]\ng = _, _\n\n[policy_effect]\ne = priority(p.eft) || deny\n\n[matchers]\nm = g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act`,\n    policy: `p, alice, data1, read, allow\np, data1_deny_group, data1, read, deny\np, data1_deny_group, data1, write, deny\np, alice, data1, write, allow\n\ng, alice, data1_deny_group\n\np, data2_allow_group, data2, read, allow\np, bob, data2, read, deny\np, bob, data2, write, deny\n\ng, bob, data2_allow_group`,\n    request: `alice, data1, read`,\n    customConfig: undefined\n  }\n};\n\nexport const defaultCustomConfig = `(function() {\n  return {\n    /**\n     * Here is custom functions for Casbin.\n     * Currently, there are built-in globMatch, keyMatch, keyMatch2, keyMatch3, keyMatch4, regexMatch, ipMatch.\n     */\n    functions: {},\n    /**\n     * If the value is undefined, the Casbin does not use it.\n     * example:\n     * matchingForGFunction: 'globMatch'\n     * matchingDomainForGFunction: 'keyMatch'\n     */\n    matchingForGFunction: undefined,\n    matchingDomainForGFunction: undefined\n  };\n})();`;\nexport type Example = typeof example;\nexport type ModelKind = keyof Example;\n","import React from 'react';\nimport { getSelectedModel, setSelectedModel } from './persist';\nimport { ModelKind, example } from './casbin-mode/example';\n\ninterface SelectModelProps {\n  onChange: (value: string) => void;\n}\n\nconst SelectModel = (props: SelectModelProps) => {\n  return (\n    <select\n      defaultValue={getSelectedModel()}\n      onChange={e => {\n        const model = e.target.value;\n        setSelectedModel(model);\n        props.onChange(model);\n      }}\n    >\n      <option value=\"\" disabled>\n        Select your model\n      </option>\n      {Object.keys(example).map(n => (\n        <option key={n} value={n}>\n          {example[n as ModelKind].name}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nSelectModel.defaultProps = {\n  onChange: console.log,\n  defaultValue: 'basic'\n};\nexport default SelectModel;\n","// @ts-nocheck\nimport CodeMirror from 'codemirror';\n\nCodeMirror.defineMode('casbin-conf', function() {\n  function tokenBase(stream, state) {\n    const ch = stream.peek();\n    if (ch === '[') {\n      if (stream.match('[request_definition')) {\n        state.sec = 'r';\n        stream.skipTo(']');\n        stream.eat(']');\n        return 'header';\n      } else if (stream.match('[policy_definition')) {\n        state.sec = 'p';\n        stream.skipTo(']');\n        stream.eat(']');\n        return 'header';\n      } else if (stream.match('[role_definition')) {\n        state.sec = 'g';\n        stream.skipTo(']');\n        stream.eat(']');\n        return 'header';\n      } else if (stream.match('[policy_effect')) {\n        state.sec = 'e';\n        stream.skipTo(']');\n        stream.eat(']');\n        return 'header';\n      } else if (stream.match('[matchers')) {\n        state.sec = 'm';\n        stream.skipTo(']');\n        stream.eat(']');\n        return 'header';\n      } else {\n        state.sec = '';\n        stream.skipToEnd();\n        return '';\n      }\n    } else if (ch === '#') {\n      stream.skipToEnd();\n      return 'comment';\n    } else if (ch === '\"') {\n      stream.skipToEnd();\n      stream.skipTo('\"');\n      stream.eat('\"');\n      return 'string';\n    } else if (ch === '=') {\n      // eslint-disable-next-line @typescript-eslint/camelcase\n      state.after_equal = true;\n      stream.eat('=');\n    }\n\n    if (stream.sol()) {\n      // eslint-disable-next-line @typescript-eslint/camelcase\n      state.after_equal = false;\n    }\n\n    if (state.sec === '') {\n      stream.skipToEnd();\n      return '';\n    }\n\n    if (stream.sol()) {\n      if (state.sec !== '') {\n        if ((state.sec === 'g' && stream.match(new RegExp('^g[2-9]?'))) || stream.match(state.sec)) {\n          if (stream.peek() === ' ' || stream.peek() === '=') {\n            return 'builtin';\n          } else {\n            state.sec = '';\n            stream.next();\n            return;\n          }\n        } else {\n          state.sec = '';\n          stream.next();\n          return;\n        }\n      } else {\n        stream.next();\n        return;\n      }\n    }\n\n    if (!state.after_equal) {\n      stream.next();\n      return;\n    }\n\n    if (state.sec === 'r' || state.sec === 'p') {\n      // Match: r = [sub], [obj], [act]\n      //        p = [sub], [obj], [act]\n      if (state.comma) {\n        state.comma = false;\n        if (stream.match(new RegExp('^[_a-zA-Z][_a-zA-Z0-9]*'))) {\n          return 'property';\n        }\n      }\n      if (stream.eat(',') || stream.eat(' ')) {\n        state.comma = true;\n        return '';\n      }\n    } else if (state.sec === 'e') {\n      // Match: e = some(where (p.[eft] == allow))\n      if (state.dot) {\n        state.dot = false;\n        if (stream.match(new RegExp('^[_a-zA-Z][_a-zA-Z0-9]*'))) {\n          return 'property';\n        }\n      }\n      if (stream.eat('.')) {\n        state.dot = true;\n        return '';\n      }\n\n      // Match: e = some(where ([p].eft == allow))\n      if (stream.match('p') && stream.peek() === '.') {\n        return 'builtin';\n      }\n\n      // Match: e = [some]([where] (p.eft == allow))\n      if (stream.match('some') || stream.match('where') || stream.match('priority')) {\n        return 'keyword';\n      }\n\n      // Match: e = some(where (p.eft == [allow]))\n      if (stream.match('allow') || stream.match('deny')) {\n        return 'string';\n      }\n    } else if (state.sec === 'm') {\n      // Match: m = r.[sub] == p.[sub] && r.[obj] == p.[obj] && r.[act] == p.[act]\n      if (state.dot) {\n        state.dot = false;\n        if (stream.match(new RegExp('^[_a-zA-Z][_a-zA-Z0-9]*'))) {\n          return 'property';\n        }\n      }\n      if (stream.eat('.')) {\n        state.dot = true;\n        return '';\n      }\n\n      // Match: m = [r].sub == [p].sub && [r].obj == [p].obj && [r].act == [p].act\n      if ((stream.match('r') || stream.match('p')) && stream.peek() === '.') {\n        return 'builtin';\n      }\n\n      // Match: m = [g](r.sub, p.sub) && r.obj == p.obj && r.act == p.act\n      if (stream.match(new RegExp('^[_a-zA-Z][_a-zA-Z0-9]*')) && stream.peek() === '(') {\n        return 'def';\n      }\n    }\n\n    stream.next();\n  }\n\n  return {\n    startState: function() {\n      return { tokenize: tokenBase };\n    },\n    token: function(stream, state) {\n      return state.tokenize(stream, state);\n    }\n  };\n});\n","// @ts-nocheck\nimport CodeMirror from 'codemirror';\n\nCodeMirror.defineMode('casbin-csv', function() {\n  function tokenBase(stream, state) {\n    const ch = stream.peek();\n\n    if (ch === '#') {\n      stream.skipToEnd();\n      return 'comment';\n    } else if (ch === ',') {\n      stream.eat(',');\n      return '';\n    }\n\n    if (stream.sol() && stream.match('p')) {\n      return 'def';\n    }\n    if (stream.sol() && (stream.match('g2') || stream.match('g'))) {\n      return 'keyword';\n    }\n\n    if (stream.skipTo(',')) {\n      return 'string';\n    }\n\n    stream.skipToEnd();\n    return 'property';\n\n    // stream.next();\n  }\n\n  return {\n    startState: function() {\n      return { tokenize: tokenBase };\n    },\n    token: function(stream, state) {\n      return state.tokenize(stream, state);\n    }\n  };\n});\n","import React, { CSSProperties } from 'react';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\n\nimport * as codemirror from 'codemirror';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/monokai.css';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/mathematica/mathematica';\nimport 'codemirror/addon/selection/active-line';\nimport 'codemirror/addon/edit/matchbrackets';\nimport 'codemirror/addon/display/placeholder';\nimport './casbin-mode/casbin-conf';\nimport './casbin-mode/casbin-csv';\nimport './editor.css';\n\ninterface CasbinCodeMirror {\n  content: string;\n  options: codemirror.EditorConfiguration;\n  style?: CSSProperties;\n  onChange: (text: string) => void;\n  className?: string;\n}\n\ninterface EditorProps {\n  text: string;\n  onChange?: (text: string) => void;\n  style?: CSSProperties;\n}\n\nconst CasbinCodeMirror = (props: CasbinCodeMirror) => {\n  return (\n    <div style={props.style} className={props.className}>\n      <CodeMirror\n        onBeforeChange={(editor, data, value) => {\n          props.onChange(value);\n        }}\n        options={props.options}\n        value={props.content}\n      />\n    </div>\n  );\n};\n\nCasbinCodeMirror.defaultProps = {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onChange: () => {}\n};\n\nexport const CustomFunctionEditor = (props: EditorProps) => {\n  return (\n    <CasbinCodeMirror\n      style={{ height: '100%' }}\n      content={props.text}\n      options={{\n        lineNumbers: true,\n        indentUnit: 4,\n        styleActiveLine: true,\n        matchBrackets: true,\n        mode: 'javascript',\n        lineWrapping: true,\n        theme: 'monokai'\n      }}\n      className={'function'}\n      {...props}\n    />\n  );\n};\n\nexport const ModelEditor = (props: EditorProps) => {\n  return (\n    <CasbinCodeMirror\n      content={props.text}\n      options={{\n        lineNumbers: true,\n        indentUnit: 4,\n        styleActiveLine: true,\n        matchBrackets: true,\n        mode: 'casbin-conf',\n        lineWrapping: true,\n        theme: 'monokai'\n      }}\n      {...props}\n    />\n  );\n};\n\nexport const PolicyEditor = (props: EditorProps) => {\n  return (\n    <CasbinCodeMirror\n      content={props.text}\n      options={{\n        lineNumbers: true,\n        indentUnit: 4,\n        styleActiveLine: true,\n        matchBrackets: true,\n        mode: 'casbin-csv',\n        lineWrapping: true,\n        theme: 'monokai'\n      }}\n      {...props}\n    />\n  );\n};\n\nexport const RequestEditor = (props: EditorProps) => {\n  return (\n    <CasbinCodeMirror\n      content={props.text}\n      options={{\n        lineNumbers: true,\n        indentUnit: 4,\n        styleActiveLine: true,\n        matchBrackets: true,\n        mode: 'mathematica',\n        lineWrapping: true,\n        theme: 'monokai'\n      }}\n      {...props}\n    />\n  );\n};\n\ninterface RequestResultEditorProps {\n  value: string;\n  style?: CSSProperties;\n}\n\nexport const RequestResultEditor = (props: RequestResultEditorProps) => {\n  return (\n    <div style={props.style}>\n      <CodeMirror\n        onBeforeChange={() => {\n          return;\n        }}\n        value={props.value}\n        options={{\n          readOnly: true,\n          indentUnit: 4,\n          styleActiveLine: true,\n          matchBrackets: true,\n          mode: 'javascript',\n          lineWrapping: true,\n          theme: 'monokai'\n        }}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Button, Echo } from '../ui';\nimport { Config } from 'casbin';\n\ninterface SyntaxProps {\n  model: string;\n  onResponse: (com: JSX.Element) => void;\n}\n\nconst Syntax = (props: SyntaxProps) => {\n  return (\n    <Button\n      style={{ marginRight: 8 }}\n      onClick={() => {\n        try {\n          Config.newConfigFromText(props.model);\n          props.onResponse(<Echo>Passed</Echo>);\n        } catch (e) {\n          props.onResponse(<Echo type={'error'}>{e.message}</Echo>);\n        }\n      }}\n    >\n      SYNTAX VALIDATE\n    </Button>\n  );\n};\n\nexport default Syntax;\n","import React from 'react';\n\nimport styled from 'styled-components';\nimport { CustomFunctionEditor } from './editor';\nimport { useLocalStorage } from './use-local-storage';\n\nconst Container = styled.div<{ open: boolean }>`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  border-right: 1px solid #ddd;\n  background: #ffffff;\n  width: ${props => (props.open ? '18rem' : '1rem')};\n  padding: ${props => (props.open ? '1rem' : 0)};\n`;\n\nconst ToggleButtonContainer = styled.div`\n  display: block;\n  cursor: pointer;\n  position: absolute;\n  top: 2px;\n  border-radius: 50%;\n  background: #ffffff;\n  right: -0.75rem;\n  height: 1.5rem;\n  width: 1.5rem;\n  color: #000000;\n  box-shadow: rgb(9 30 66 / 8%) 0 0 0 1px, rgb(9 30 66 / 8%) 0 2px 4px 1px;\n\n  ${Container}:hover & {\n    display: block;\n  }\n`;\n\ninterface SettingsProps {\n  text: string;\n  // enableABAC: boolean;\n  // onEnableABAC: (v: boolean) => void;\n  onCustomConfigChange: (text: string) => void;\n}\n\nexport function Settings(props: SettingsProps) {\n  const [open, setOpen] = useLocalStorage(true, 'SETTINGS_OPEN');\n\n  return (\n    <Container open={open}>\n      <ToggleButtonContainer onClick={() => setOpen(!open)}>\n        <svg style={{ width: '100%', height: '100%', transform: open ? 'rotateZ(0deg)' : 'rotateZ(180deg)' }} viewBox=\"0 0 24 24\">\n          <path fill={'currentColor'} d=\"M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z\" />\n        </svg>\n      </ToggleButtonContainer>\n\n      <div style={{ display: open ? 'flex' : 'none', flexDirection: 'column', flexGrow: 1 }}>\n        <div style={{ display: 'flex', flexDirection: 'column', flexGrow: 1 }}>\n          <span style={{ margin: '0.5rem 0' }}>Custom config</span>\n          <CustomFunctionEditor style={{ flex: 1 }} text={props.text} onChange={props.onCustomConfigChange} />\n        </div>\n      </div>\n    </Container>\n  );\n}\n","import React from 'react';\n\nexport function useLocalStorage(defaultValue: any, key: string) {\n  const [value, setValue] = React.useState(() => {\n    const stickyValue = window.localStorage.getItem(key);\n    return stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\n  });\n  React.useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n\n  return [value, setValue];\n}\n","import { Button, Echo } from '../ui';\nimport React, { useState } from 'react';\n\ninterface ShareProps extends ShareFormat {\n  onResponse: (info: JSX.Element | string) => void;\n}\n\nexport interface ShareFormat {\n  model: string;\n  policy: string;\n  customConfig: string;\n  request: string;\n}\n\nasync function dpaste(content: string) {\n  const response = await fetch('https://dpaste.com/api/', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    body: `content=${encodeURIComponent(content)}&syntax=json&title=${encodeURIComponent('Casbin Shared Content')}&expiry_days=200`\n  });\n  return response.text();\n}\n\nconst Share = (props: ShareProps) => {\n  const [sharing, setSharing] = useState(false);\n\n  function shareInfo(props: ShareProps) {\n    if (sharing) return;\n    setSharing(true);\n    props.onResponse(<Echo>Sharing...</Echo>);\n    const shareContent: ShareFormat = {\n      model: props.model,\n      policy: props.policy,\n      customConfig: props.customConfig,\n      request: props.request\n    };\n    dpaste(JSON.stringify(shareContent)).then((url: string) => {\n      setSharing(false);\n      const hash = url.split('/')[3];\n      props.onResponse(hash);\n    });\n  }\n\n  return (\n    <Button style={{ marginRight: 8 }} onClick={() => shareInfo(props)}>\n      SHARE\n    </Button>\n  );\n};\n\nexport default Share;\n","import { Button } from '../ui';\nimport React from 'react';\n\ninterface CopyProps {\n  content: string;\n  cb: () => void;\n}\n\nconst Copy = (props: CopyProps) => {\n  function copy(data: string): void {\n    const listener = (e: ClipboardEvent) => {\n      if (!e.clipboardData) {\n        throw new Error('Clipboard API unavailable.');\n      }\n      e.clipboardData.setData('text/plain', data);\n      e.preventDefault();\n      document.removeEventListener('copy', listener);\n    };\n    document.addEventListener('copy', listener);\n    document.execCommand('copy');\n    props.cb();\n  }\n\n  return (\n    <Button style={{ marginRight: 8 }} onClick={() => copy(`${window.location.origin + window.location.pathname}#${props.content}`)}>\n      COPY\n    </Button>\n  );\n};\n\nexport default Copy;\n","import React, { isValidElement, useEffect, useState } from 'react';\nimport SelectModel from './select-model';\nimport { Button, Echo, EditorContainer, FlexRow, HeaderTitle } from '../ui';\nimport { get, getSelectedModel, Persist, reset, set } from './persist';\nimport { ModelEditor, PolicyEditor, RequestEditor, RequestResultEditor } from './editor';\nimport Syntax from './syntax';\nimport RunTest from './run-test';\nimport { ModelKind } from './casbin-mode/example';\nimport { Settings } from './settings';\nimport styled from 'styled-components';\n// import { useLocalStorage } from './use-local-storage';\nimport Share, { ShareFormat } from './share';\nimport Copy from './copy';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const EditorScreen = () => {\n  const [modelKind, setModelKind] = useState<ModelKind>(getSelectedModel());\n  const [modelText, setModelText] = useState('');\n  const [policy, setPolicy] = useState('');\n  const [request, setRequest] = useState('');\n  const [echo, setEcho] = useState<JSX.Element>(<></>);\n  const [requestResult, setRequestResult] = useState('');\n  const [customConfig, setCustomConfig] = useState('');\n  const [share, setShare] = useState('');\n\n  function setPolicyPersistent(text: string): void {\n    set(Persist.POLICY, text);\n    setPolicy(text);\n  }\n\n  function setModelTextPersistent(text: string): void {\n    set(Persist.MODEL, text);\n    setModelText(text);\n  }\n\n  function setCustomConfigPersistent(text: string): void {\n    set(Persist.CUSTOM_FUNCTION, text);\n    setCustomConfig(text);\n  }\n\n  function setRequestPersistent(text: string): void {\n    set(Persist.REQUEST, text);\n    setRequest(text);\n  }\n\n  useEffect(() => {\n    const hash = window.location.hash.slice(1);\n    if (hash) {\n      setEcho(<Echo>Loading Shared Content...</Echo>);\n      fetch(`https://dpaste.com/${hash}.txt`)\n        .then(resp => resp.text())\n        .then(content => {\n          const sharedContent = JSON.parse(content) as ShareFormat;\n          setPolicyPersistent(sharedContent.policy);\n          setModelTextPersistent(sharedContent.model);\n          setCustomConfigPersistent(sharedContent.customConfig);\n          setRequestPersistent(sharedContent.request);\n          setRequestResult('');\n          window.location.hash = ''; // prevent duplicate load\n          setEcho(<Echo>Shared Content Loaded.</Echo>);\n        })\n        .catch(() => {\n          setEcho(<Echo type={'error'}>Failed to load Shared Content.</Echo>);\n        });\n    }\n  }, []);\n\n  useEffect(() => {\n    setPolicy(get(Persist.POLICY, modelKind));\n    setModelText(get(Persist.MODEL, modelKind));\n    setRequest(get(Persist.REQUEST, modelKind));\n    setCustomConfig(get(Persist.CUSTOM_FUNCTION, modelKind));\n  }, [modelKind]);\n\n  function handleShare(v: JSX.Element | string) {\n    if (isValidElement(v)) {\n      setEcho(v);\n    } else {\n      const currentPath = window.location.origin + window.location.pathname;\n      setShare(v as string);\n      setEcho(<Echo>{`Shared at ${currentPath}#${v}`}</Echo>);\n    }\n  }\n\n  return (\n    <Container>\n      <Settings\n        text={customConfig}\n        onCustomConfigChange={v => {\n          setCustomConfigPersistent(v);\n        }}\n      />\n      <div style={{ flex: 1 }}>\n        <FlexRow>\n          <EditorContainer>\n            <FlexRow>\n              <HeaderTitle>Model</HeaderTitle>\n              <SelectModel\n                onChange={value => {\n                  setModelKind(value as ModelKind);\n                }}\n              />\n              <Button\n                onClick={() => {\n                  const ok = window.confirm('Confirm Reset?');\n                  if (ok) {\n                    reset(modelKind);\n                    window.location.reload();\n                  }\n                }}\n                style={{ marginLeft: 8 }}\n              >\n                Reset\n              </Button>\n            </FlexRow>\n            <ModelEditor text={modelText} onChange={setModelTextPersistent} />\n          </EditorContainer>\n          <EditorContainer>\n            <HeaderTitle>Policy</HeaderTitle>\n            <PolicyEditor text={policy} onChange={setPolicyPersistent} />\n          </EditorContainer>\n        </FlexRow>\n\n        <FlexRow>\n          <EditorContainer>\n            <HeaderTitle>Request</HeaderTitle>\n            <RequestEditor text={request} onChange={setRequestPersistent} />\n          </EditorContainer>\n          <EditorContainer>\n            <HeaderTitle>Enforcement Result</HeaderTitle>\n            <RequestResultEditor value={requestResult} />\n          </EditorContainer>\n        </FlexRow>\n\n        <div style={{ padding: 8 }}>\n          <Syntax model={modelText} onResponse={component => setEcho(component)} />\n          <RunTest\n            modelKind={modelKind}\n            model={modelText}\n            policy={policy}\n            customConfig={customConfig}\n            request={request}\n            onResponse={v => {\n              if (isValidElement(v)) {\n                setEcho(v);\n              } else if (Array.isArray(v)) {\n                setRequestResult(v.join('\\n'));\n              }\n            }}\n          />\n          {!share ? (\n            <Share onResponse={v => handleShare(v)} model={modelText} policy={policy} customConfig={customConfig} request={request} />\n          ) : (\n            <Copy\n              content={share}\n              cb={() => {\n                setShare('');\n                setEcho(<Echo>Copied.</Echo>);\n              }}\n            />\n          )}\n          <div style={{ display: 'inline-block' }}>{echo}</div>\n        </div>\n      </div>\n    </Container>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { EditorScreen } from './editor';\nimport { Footer } from './ui';\nimport 'normalize.css/normalize.css';\n\nconst App = () => (\n  <>\n    <EditorScreen />\n\n    <Footer>\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/casbin/casbin-editor\">\n        <img alt=\"GitHub stars\" src=\"https://img.shields.io/github/stars/casbin/casbin-editor?style=social\" />\n      </a>\n      <span style={{ color: '#FFFFFF', float: 'right', fontSize: 14 }}>Copyright © {new Date().getFullYear()} Casbin contributors.</span>\n    </Footer>\n  </>\n);\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  border: 1px solid #443d80;\n  border-radius: 3px;\n  color: #443d80;\n  display: inline-block;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.2em;\n  padding: 10px;\n  text-decoration: none !important;\n  text-transform: uppercase;\n  transition: background 0.3s, color 0.3s;\n\n  :hover {\n    background: #443d80;\n    color: #fff;\n  }\n`;\n\nexport const HeaderTitle = styled.h4`\n  padding: 8px;\n`;\n\nexport const FlexRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const EditorContainer = styled.div`\n  flex: 1;\n`;\n\ninterface EchoProps {\n  type?: 'pass' | 'error';\n}\n\nconst error = '#db4545';\nconst pass = '#39aa56';\n\nexport const Echo = styled.span<EchoProps>`\n  color: ${(props: EchoProps) => {\n    switch (props.type) {\n      case 'error':\n        return error;\n      case 'pass':\n        return pass;\n    }\n  }};\n  font-weight: 600;\n  font-size: 14px;\n`;\n\nEcho.defaultProps = {\n  type: 'pass'\n};\n\nexport const Footer = styled.div`\n  padding: 1em;\n  background: #222;\n`;\n","import React from 'react';\nimport { Button, Echo } from '../ui';\nimport { DefaultRoleManager, newEnforcer, newModel, StringAdapter, Util } from 'casbin';\n\ninterface RunTestProps {\n  model: string;\n  modelKind: string;\n  policy: string;\n  customConfig: string;\n  request: string;\n  onResponse: (com: JSX.Element | any[]) => void;\n  // parseABAC: boolean;\n}\n\nfunction parseABACRequest(line: string): any[] {\n  let value = '';\n  let objectToken = 0;\n  let parseToObject = false;\n  const request = [];\n\n  for (let i = 0; i < line.length; i++) {\n    if (objectToken === 0 && line[i] === ',') {\n      if (parseToObject) {\n        // eslint-disable-next-line\n        value = eval(`(${value})`);\n      }\n      request.push(value.trim());\n\n      value = '';\n      parseToObject = false;\n      continue;\n    }\n\n    value += line[i];\n\n    if (line[i] === '{') {\n      parseToObject = true;\n      objectToken++;\n      continue;\n    }\n\n    if (line[i] === '}') {\n      objectToken--;\n    }\n  }\n\n  if (objectToken !== 0) {\n    throw new Error(`invalid request ${line}`);\n  }\n\n  if (value) {\n    if (parseToObject) {\n      // eslint-disable-next-line\n      value = eval(`(${value})`);\n    }\n    request.push(value.trim());\n  }\n\n  return request;\n}\n\nasync function enforcer(props: RunTestProps) {\n  const startTime = performance.now();\n  const result = [];\n  try {\n    const e = await newEnforcer(newModel(props.model), props.policy ? new StringAdapter(props.policy) : undefined);\n\n    const customConfigCode = props.customConfig;\n    if (customConfigCode) {\n      try {\n        const builtinFunc = {\n          keyMatch: Util.keyMatchFunc,\n          keyGet: Util.keyGetFunc,\n          keyMatch2: Util.keyMatch2Func,\n          keyGet2: Util.keyGet2Func,\n          keyMatch3: Util.keyMatch3Func,\n          keyMatch4: Util.keyMatch4Func,\n          regexMatch: Util.regexMatchFunc,\n          ipMatch: Util.ipMatchFunc,\n          globMatch: Util.globMatch\n        };\n\n        // eslint-disable-next-line\n        let config = eval(customConfigCode);\n        if (config) {\n          config = { ...config, functions: { ...config.functions, ...builtinFunc } };\n          if (config?.functions) {\n            Object.keys(config.functions).forEach(key => e.addFunction(key, config.functions[key]));\n          }\n\n          const rm = e.getRoleManager() as DefaultRoleManager;\n          const matchingForGFunction = config.matchingForGFunction;\n          if (matchingForGFunction) {\n            if (typeof matchingForGFunction === 'function') {\n              await rm.addMatchingFunc(matchingForGFunction);\n            }\n            if (typeof matchingForGFunction === 'string') {\n              if (matchingForGFunction in config.functions) {\n                await rm.addMatchingFunc(config.functions[matchingForGFunction]);\n              } else {\n                props.onResponse(<Echo type={'error'}>Must sure the {matchingForGFunction}() in config.functions</Echo>);\n                return;\n              }\n            }\n          }\n\n          const matchingDomainForGFunction = config.matchingDomainForGFunction;\n          if (matchingDomainForGFunction) {\n            if (typeof matchingDomainForGFunction === 'function') {\n              await rm.addDomainMatchingFunc(matchingDomainForGFunction);\n            }\n            if (typeof matchingDomainForGFunction === 'string') {\n              if (matchingDomainForGFunction in config.functions) {\n                await rm.addDomainMatchingFunc(config.functions[matchingDomainForGFunction]);\n              } else {\n                props.onResponse(<Echo type={'error'}>Must sure the {matchingDomainForGFunction}() in config.functions</Echo>);\n                return;\n              }\n            }\n          }\n        }\n      } catch (e) {\n        props.onResponse(<Echo type={'error'}>Please check syntax in Custom Function Editor: {e.message}</Echo>);\n        return;\n      }\n    }\n\n    const requests = props.request.split('\\n');\n\n    for (const n of requests) {\n      const line = n.trim();\n      if (!line) {\n        result.push('// ignore');\n        continue;\n      }\n\n      if (line[0] === '#') {\n        result.push('// ignore');\n        continue;\n      }\n\n      const rvals = parseABACRequest(n);\n      result.push(await e.enforce(...rvals));\n    }\n\n    const stopTime = performance.now();\n\n    props.onResponse(<Echo>{'Done in ' + (stopTime - startTime).toFixed(2) + 'ms'}</Echo>);\n    props.onResponse(result);\n  } catch (e) {\n    props.onResponse(<Echo type={'error'}>{e.message}</Echo>);\n    props.onResponse([]);\n  }\n}\n\nconst RunTest = (props: RunTestProps) => {\n  return (\n    <Button style={{ marginRight: 8 }} onClick={() => enforcer(props)}>\n      RUN THE TEST\n    </Button>\n  );\n};\n\nexport default RunTest;\n"],"sourceRoot":""}